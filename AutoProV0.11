Zen.Application.Documents.RemoveAll(False)

#####################################
#### Define functions
#####################################

def newFile(stringInput):
    rows = table.RowCount
    table.SetValue(rows,0,str(stringInput))
    table.SetValue(rows,1,"in progress")
    return
    
def processFile(stringInput):
    rows = table.RowCount
    fileName = str(path_to_watch) + "\\" + str(stringInput)
    print fileName    
    image1 = Zen.Application.LoadImage(fileName,False)
    if image1.Bounds.IsZStack:
        image2 = ZenLSM.Processing.Utilities.Airyscan(image1,True,False)
    else:
        image2 = ZenLSM.Processing.Utilities.Airyscan(image1, False, False)
    Zen.Application.Documents.Add(image2)
    datatable1 = Zen.Application.Documents.GetByName("Processing File List")
    Zen.Application.Documents.ActiveDocument = datatable1
    
    
#####################################
#### Import libraries and set variables
#####################################

pythonPath = "C:\\Python27\\Lib"
sys.path.append(pythonPath)

from System.IO import Directory
from System.Threading import Thread
from os import listdir
import time

####################################################################################################################################################
####  Full code
####################################################################################################################################################


####  Define folder to monitor
path_to_watch = "C:\\Users\\CADSTEV\\Desktop\\StreamTest"
#beforeDict = dict ([(f, None) for f in Directory.GetFiles(path_to_watch)])
oldList = listdir(path_to_watch)
#print "List of files at start = " + str(oldList)

#### Define Table
table = ZenTable()
table.Name = 'Processing File List'
table.Columns.Add('File Name')
table.Columns.Add('Status')
Zen.Application.Documents.Add(table)


while 1:
    time.sleep (1)
    newList = listdir(path_to_watch)
    for val in newList:
        if val not in oldList:
            if val.endswith(".czi"):
                newFile(val)
                processFile(val)
                rows = table.RowCount
                table.SetValue(rows-1,1,"processed")
    oldList = newList
